class Solution {
    public int numTilePossibilities(String tiles) {
        Set<String> result = new HashSet<>();
        char[] chars = tiles.toCharArray();
        Arrays.sort(chars);
        backtrack(chars, new boolean[tiles.length()], "", result);
        return result.size();
    }

    private void backtrack(char[] chars, boolean[] used, String current, Set<String> result) {
        if (!current.isEmpty()) {
            result.add(current);
        }

        for (int i = 0; i < chars.length; i++) {
            if (used[i]) continue;
            if (i > 0 && chars[i] == chars[i - 1] && !used[i - 1]) continue;

            used[i] = true;
            backtrack(chars, used, current + chars[i], result);
            used[i] = false;
        }
    }
}
