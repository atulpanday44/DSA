class Solution {
    public int[] searchRange(int[] nums, int x) {
        int n = nums.length;
        int[] result = new int[2]; // To store the start and end indices
        result[0] = findStart(nums, x);
        result[1] = findEnd(nums, x);
        return result;
    }

    private int findStart(int[] nums, int x) {
        int l = 0, r = nums.length - 1;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if (nums[mid] < x) {
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        if (l < nums.length && nums[l] == x) {
            return l;
        }
        return -1; // Not found
    }

    private int findEnd(int[] nums, int x) {
        int l = 0, r = nums.length - 1;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if (nums[mid] <= x) {
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        if (r >= 0 && nums[r] == x) {
            return r;
        }
        return -1; // Not found
    }
}
