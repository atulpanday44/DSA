class Solution {
    public int singleNonDuplicate(int[] nums) {
        int l = 0;
        int r = nums.length - 1;
        if (r == 0) return nums[0];
        if (nums[0] != nums[1]) return nums[0];
        if (nums[r] != nums[r - 1]) return nums[r];

        while (l <= r) {
            int mid = l + (r - l) / 2;

            // Check if mid is the unique element
            if ((mid == 0 || nums[mid] != nums[mid - 1]) && 
                (mid == r || nums[mid] != nums[mid + 1])) {
                return nums[mid];
            }
            if (mid % 2 == 0) {
                if (nums[mid] == nums[mid + 1]) {
                    l = mid + 2;
                } else {
                    r = mid - 1;
                }
            } else {
                if (nums[mid] == nums[mid - 1]) {
                    l = mid + 1; 
                } else {
                    r = mid - 1;
                }
            }
        }
        
        return -1; 
    }
}
